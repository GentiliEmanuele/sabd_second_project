networks:
  cluster-network:
    driver: bridge

services:
  micro-challenger:
    image: micro-challenger:latest
    hostname: micro-challenger
    networks:
      - cluster-network
    volumes:
      - ./gc25-chall/data:/data
    command: ["0.0.0.0:8866", "/data"]
  
  jobmanager:
    image: flink:latest
    hostname: jobmanager
    container_name: jobmanager
    ports:
      - "8081:8081"
    command: jobmanager
    volumes:
      - ./target:/opt/flink/usrlib
    env_file:
      - conf/flink.config
    environment:
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: jobmanager
        parallelism.default: 2
    networks:
      - cluster-network

  taskmanager:
    image: flink:latest
    container_name: taskmanager
    depends_on:
      - jobmanager
    command: taskmanager
    scale: 1
    volumes:
      - ./target:/opt/flink/usrlib
    environment:
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: jobmanager
        taskmanager.numberOfTaskSlots: 2
        parallelism.default: 2
    networks:
      - cluster-network
  
  kafka:
    image: 'bitnami/kafka:latest'
    hostname: kafka
    env_file:
      - conf/kafka.config
    networks:
      - cluster-network
  
  kafka-ui:
    image: 'provectuslabs/kafka-ui:latest'
    hostname: kafka-ui
    depends_on:
      - kafka
    env_file:
      - conf/kafka.ui.config
    networks:
      - cluster-network

  kafka-producer:
    build:
      context: ./kafka-producer
      dockerfile: Dockerfile
    depends_on:
      - kafka
      - micro-challenger
    command: ["--apitoken", "sandro", "--name", "autoban", "--limit", "128"]
    env_file:
      - conf/kafka.client.config
    networks:
      - cluster-network

  firefox:
    image: jlesage/firefox
    ports:
      - 5800:5800
    networks:
      - cluster-network